Project
- add tests for clearing club data
- set up branching model that requires tests to pass to submit
- strongly type all lists on club
- convert players to be passed around as ids
- add script to deploy to specific folder and also backup stored data
- investigate python testing frameworks, and add tests for src Project
- restructure projects, main logic base should be standalone and testable(currently anything under "src")

FEATURES
- add dummy clubs
- add remove club functionality
- we need to ask where to store data using filedialog.askdirectory(). Currently if we get a new distribution we lose old data

UI
- value of ObjectListWidget?
- fix add venue wizard
- fix add match report wizard
- club creation has no titles to explain what you are setting


MATCHES
- create match reports from fixtures
- scoreline should default to 0-0
- can enter anything for goals
- add goals to options in edit match report

EDITING
- edit fixture

UX
- add confirm to clear local data button

PLAYERS
- need PlayerProfile
    - stats
    - finances
    - player info
- training credits
- match credits

FINANCES
- add transactions
- edit transactions
- remove transactions

MATCH REPORTS
- add match report wizard ui should be fully data driven from a base match report object that we edit
- subs limit should change depending on match type
- match reports should store the cost of the session in case they change in the interim and we edit the data

CODE CLEAN-up
- don't directly manipulate "training_venues" on club(search training_venues to see issue) can __(double underscore variables to make them private)
- do all of the above for data on club, should all be private
- move magic numbers into data e.g inside financial_utilities

CLUB
- add rules for short name, maybe make club base and extend opponent from it too?

CORE
*move towards stateless*
- rest api should load data from json
- rewrite functions to manipulate existing data(no loading or reliance on 'application')
- swap to 'List' from 'list' to ensure compatability


GOAL1
- ensure that clubs can be viewed using the existing json approach in the ui
- investigate database solutions and setup a database
- add club schema with a name and an id
- migrate existing clubs across
- adjust existing code to lookup and store clubs by id rather than name

GOAL2
- add player schema with an autoinc id, name, dob and an optional clubId
- migrate existing players
- adjust existing code to create players in the database
- adjust existing code to load players from the database
